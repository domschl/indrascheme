(define (isqrt n) (let x0 (/ n 2) (let x1 (/ (+ x0 (/ n x0)) 2) (while (< x1 x0) (let x0 x1) (let x1 (/ (+ x0 (/ n x0)) 2)))) x0 ))
(define (isprime n) (if (< n 2) #f (if (== n 2) #t (if (== (% n 2) 0) #f (let s (isqrt n) (let d 3 (let b #t (while ((< d s) and b) (if (== (% n d) 0) (let b #f) (let d (+ d 2)))) b) )) )) ))
